---
apiVersion: "template.openshift.io/v1"
kind: "Template"
metadata:
  labels:
    app: "xml-builder"
    group: "project-openubl"
  name: "xml-builder-signer-system"
objects:
  - apiVersion: "v1"
    kind: "ServiceAccount"
    metadata:
      labels:
        app: "xml-builder-signer"
        group: "project-openubl"
      name: "xml-builder"
  - apiVersion: "v1"
    kind: "Service"
    metadata:
      labels:
        app: "xml-builder-signer"
        group: "project-openubl"
      name: "xml-builder-signer"
    spec:
      ports:
        - name: "http"
          port: 8080
          targetPort: 8080
      selector:
        app: "xml-builder-signer"
        group: "project-openubl"
      type: "ClusterIP"
  - apiVersion: "route.openshift.io/v1"
    kind: "Route"
    metadata:
      labels:
        app: "xml-builder-signer"
        group: "project-openubl"
      name: "xml-builder-signer"
    spec:
      host: ""
      path: "/"
      port:
        targetPort: 8080
      to:
        kind: "Service"
        name: "xml-builder-signer"
  - apiVersion: "apps.openshift.io/v1"
    kind: "DeploymentConfig"
    metadata:
      labels:
        app: "xml-builder-signer"
        group: "project-openubl"
      name: "xml-builder-signer"
    spec:
      replicas: 1
      selector:
        app: "xml-builder-signer"
        group: "project-openubl"
      template:
        metadata:
          labels:
            app: "xml-builder-signer"
            group: "project-openubl"
        spec:
          containers:
            - env:
                - name: "KUBERNETES_NAMESPACE"
                  valueFrom:
                    fieldRef:
                      fieldPath: "metadata.namespace"
              image: "projectopenubl/xml-builder-signer:latest"
              imagePullPolicy: "IfNotPresent"
              livenessProbe:
                failureThreshold: 3
                httpGet:
                  path: "/api/health/live"
                  port: 8080
                  scheme: "HTTP"
                initialDelaySeconds: 0
                periodSeconds: 30
                successThreshold: 1
                timeoutSeconds: 10
              name: "xml-builder-signer"
              ports:
                - containerPort: 8080
                  name: "http"
                  protocol: "TCP"
              readinessProbe:
                failureThreshold: 3
                httpGet:
                  path: "/api/health/ready"
                  port: 8080
                  scheme: "HTTP"
                initialDelaySeconds: 0
                periodSeconds: 30
                successThreshold: 1
                timeoutSeconds: 10
          serviceAccount: "xml-builder-signer"
  - apiVersion: "v1"
    kind: "Secret"
    metadata:
      annotations:
        "template.openshift.io/expose-database_name": "{.data['database-name']}"
        "template.openshift.io/expose-password": "{.data['database-password']}"
        "template.openshift.io/expose-username": "{.data['database-user']}"
      name: "xml-builder-signer-db"
    stringData:
      database-name: "${POSTGRESQL_DATABASE}"
      database-password: "${POSTGRESQL_PASSWORD}"
      database-user: "${POSTGRESQL_USER}"
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        "template.openshift.io/expose-uri": "postgres://{.spec.clusterIP}:{.spec.ports[?(.name==\"postgresql\")].port}"
      name: "xml-builder-signer-db"
    spec:
      ports:
        - name: postgresql
          nodePort: 0
          port: 5432
          protocol: TCP
          targetPort: 5432
      selector:
        name: "xml-builder-signer-db"
      sessionAffinity: None
      type: ClusterIP
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: "xml-builder-signer-db"
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: "${VOLUME_CAPACITY}"
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      annotations:
        template.alpha.openshift.io/wait-for-ready: 'true'
      name: "xml-builder-signer-db"
    spec:
      replicas: 1
      selector:
        name: "xml-builder-signer-db"
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            name: "xml-builder-signer-db"
        spec:
          containers:
            - capabilities: {}
              env:
                - name: POSTGRESQL_USER
                  valueFrom:
                    secretKeyRef:
                      key: database-user
                      name: "xml-builder-signer-db"
                - name: POSTGRESQL_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      key: database-password
                      name: "xml-builder-signer-db"
                - name: POSTGRESQL_DATABASE
                  valueFrom:
                    secretKeyRef:
                      key: database-name
                      name: "xml-builder-signer-db"
              image: " "
              imagePullPolicy: IfNotPresent
              livenessProbe:
                exec:
                  command:
                    - "/usr/libexec/check-container"
                    - "--live"
                initialDelaySeconds: 120
                timeoutSeconds: 10
              name: postgresql
              ports:
                - containerPort: 5432
                  protocol: TCP
              readinessProbe:
                exec:
                  command:
                    - "/usr/libexec/check-container"
                initialDelaySeconds: 5
                timeoutSeconds: 1
              resources:
                limits:
                  memory: "${MEMORY_LIMIT}"
              securityContext:
                capabilities: {}
                privileged: false
              terminationMessagePath: "/dev/termination-log"
              volumeMounts:
                - mountPath: "/var/lib/pgsql/data"
                  name: "${DATABASE_SERVICE_NAME}-data"
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          volumes:
            - name: "${DATABASE_SERVICE_NAME}-data"
              persistentVolumeClaim:
                claimName: "xml-builder-signer-db"
      triggers:
        - imageChangeParams:
            automatic: true
            containerNames:
              - postgresql
            from:
              kind: ImageStreamTag
              name: postgresql:${POSTGRESQL_VERSION}
              namespace: "${NAMESPACE}"
            lastTriggeredImage: ''
          type: ImageChange
        - type: ConfigChange
    status: {}
parameters:
  - description: Maximum amount of memory the container can use.
    displayName: Memory Limit
    name: MEMORY_LIMIT
    required: true
    value: 512Mi
  - description: The OpenShift Namespace where the ImageStream resides.
    displayName: Namespace
    name: NAMESPACE
    value: openshift
  - description: The name of the OpenShift Service exposed for the database.
    displayName: Database Service Name
    name: DATABASE_SERVICE_NAME
    required: true
    value: postgresql
  - description: Username for PostgreSQL user that will be used for accessing the database.
    displayName: PostgreSQL Connection Username
    from: user[A-Z0-9]{3}
    generate: expression
    name: POSTGRESQL_USER
    required: true
  - description: Password for the PostgreSQL connection user.
    displayName: PostgreSQL Connection Password
    from: "[a-zA-Z0-9]{16}"
    generate: expression
    name: POSTGRESQL_PASSWORD
    required: true
  - description: Name of the PostgreSQL database accessed.
    displayName: PostgreSQL Database Name
    name: POSTGRESQL_DATABASE
    required: true
    value: sampledb
  - description: Volume space available for data, e.g. 512Mi, 2Gi.
    displayName: Volume Capacity
    name: VOLUME_CAPACITY
    required: true
    value: 1Gi
  - description: Version of PostgreSQL image to be used (10 or latest).
    displayName: Version of PostgreSQL Image
    name: POSTGRESQL_VERSION
    required: true
    value: '10'
