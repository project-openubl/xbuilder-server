trigger:
  batch: true
  branches:
    include:
      - master
  tags:
    include:
      - '*'

pr:
  branches:
    include:
      - master
  paths:
    exclude:
      - docs/src/main/asciidoc/*
      - docs/src/main/asciidoc/images/*
      - README.md
      - CONTRIBUTING.md
      - LICENSE.txt
      - dco.txt
      - .github/ISSUE_TEMPLATE/*.md

stages:
  - stage: test
    displayName: Test
    jobs:
      - job: test
        displayName: Test
        strategy:
          maxParallel: 2
          matrix:
            jdk8_linux:
              imageName: 'ubuntu-16.04'
              jdk_version: '1.8'
            jdk11_linux:
              imageName: 'ubuntu-16.04'
              jdk_version: '1.11'
            jdk18_windows:
              imageName: 'vs2017-win2016'
              jdk_version: '1.8'
            jdk11_windows:
              imageName: 'vs2017-win2016'
              jdk_version: '1.11'
        pool:
          vmImage: $(imageName)
        steps:
          - task: Maven@3
            displayName: Maven
            inputs:
              mavenPomFile: 'pom.xml'
              goals: verify
              jdkVersionOption: $(jdk_version)

      - job: test_sunat
        displayName: Test SUNAT
        pool:
          vmImage: 'ubuntu-16.04'
        steps:
          - task: Maven@3
            inputs:
              mavenPomFile: 'pom.xml'
              goals: 'verify'
              options: '-Psunat'
              javaHomeOption: 'JDKVersion'

      - job: test_ui
        displayName: Test UI
        pool:
          vmImage: 'ubuntu-16.04'
        steps:
          - task: Maven@3
            inputs:
              mavenPomFile: 'pom.xml'
              goals: 'package'
              options: -DskipTests -Pui
              javaHomeOption: 'JDKVersion'

      - job: test_native
        displayName: Test native
        strategy:
          maxParallel: 2
          matrix:
            api:
              imageName: 'ubuntu-16.04'
              dockerfile: '**/Dockerfile.api.multistage'
              repository: 'projectopenubl/xml-builder'
            api_signer:
              imageName: 'ubuntu-16.04'
              dockerfile: '**/Dockerfile.apisigner.multistage'
              repository: 'projectopenubl/xml-builder-signer'
        pool:
          vmImage: $(imageName)
        steps:
          - task: Docker@2
            displayName: Build
            condition: eq(variables['System.PullRequest.IsFork'], 'True')
            inputs:
              command: 'build'
              Dockerfile: $(dockerfile)
          - task: Docker@2
            displayName: Build and push
            condition: eq(variables['System.PullRequest.IsFork'], 'False')
            inputs:
              containerRegistry: 'Docker Hub'
              repository: ${repository}
              command: 'buildAndPush'
              Dockerfile: $(dockerfile)

  - stage: release
    displayName: Release
    jobs:
      - job: release_to_dockerhub
        displayName: Release to Docker Hub
        condition: startsWith(variables['Build.SourceBranch'], 'refs/tags/')
        strategy:
          maxParallel: 2
          matrix:
            api:
              imageName: 'ubuntu-16.04'
              dockerfile: '**/Dockerfile.api.multistage'
              repository: 'projectopenubl/xml-builder'
            api_signer:
              imageName: 'ubuntu-16.04'
              dockerfile: '**/Dockerfile.apisigner.multistage'
              repository: 'projectopenubl/xml-builder-signer'
        pool:
          vmImage: $(imageName)
        steps:
          - task: Docker@2
            inputs:
              containerRegistry: 'Docker Hub'
              repository: ${repository}
              command: 'buildAndPush'
              Dockerfile: ${dockerfile}
              tags: |
                $(Build.SourceBranchName)
                latest

      - job: release_to_github
        displayName: Release to Github
        condition: startsWith(variables['Build.SourceBranch'], 'refs/tags/')
        steps:
          - task: Maven@3
            inputs:
              mavenPomFile: 'pom.xml'
              goals: 'package'
              options: -DskipTests -Pui
              javaHomeOption: 'JDKVersion'
              jdkVersionOption: '1.8'
              mavenVersionOption: 'Default'

          - task: CopyFiles@2
            inputs:
              SourceFolder: 'api/target'
              Contents: '*-runner.jar'
              TargetFolder: '$(Build.BinariesDirectory)/api'
          - task: CopyFiles@2
            inputs:
              SourceFolder: 'api/target'
              Contents: 'lib/**'
              TargetFolder: '$(Build.BinariesDirectory)/api'

          - task: CopyFiles@2
            inputs:
              SourceFolder: 'api-signer/target'
              Contents: '*-runner.jar'
              TargetFolder: '$(Build.BinariesDirectory)/api-signer'
          - task: CopyFiles@2
            inputs:
              SourceFolder: 'api-signer/target'
              Contents: 'lib/**'
              TargetFolder: '$(Build.BinariesDirectory)/api-signer'

          - task: ArchiveFiles@2
            inputs:
              rootFolderOrFile: '$(Build.BinariesDirectory)/api'
              includeRootFolder: false
              archiveType: 'zip'
              archiveFile: '$(Build.ArtifactStagingDirectory)/xml-builder-$(Build.SourceBranchName).zip'
              replaceExistingArchive: true
          - task: ArchiveFiles@2
            inputs:
              rootFolderOrFile: '$(Build.BinariesDirectory)/api'
              includeRootFolder: false
              archiveType: 'tar'
              archiveFile: '$(Build.ArtifactStagingDirectory)/xml-builder-$(Build.SourceBranchName).tar.gz'
              replaceExistingArchive: true

          - task: ArchiveFiles@2
            inputs:
              rootFolderOrFile: '$(Build.BinariesDirectory)/api-signer'
              includeRootFolder: false
              archiveType: 'zip'
              archiveFile: '$(Build.ArtifactStagingDirectory)/xml-builder-signer-$(Build.SourceBranchName).zip'
              replaceExistingArchive: true
          - task: ArchiveFiles@2
            inputs:
              rootFolderOrFile: '$(Build.BinariesDirectory)/api-signer'
              includeRootFolder: false
              archiveType: 'tar'
              archiveFile: '$(Build.ArtifactStagingDirectory)/xml-builder-signer-$(Build.SourceBranchName).tar.gz'
              replaceExistingArchive: true

          - task: GitHubRelease@1
            displayName: Create Github Release
            inputs:
              gitHubConnection: project-openubl
              repositoryName: '$(Build.Repository.Name)'
              action: 'create'
              target: '$(Build.SourceVersion)'
              tagSource: 'gitTag'
              assets: |
                  $(Build.ArtifactStagingDirectory)/*.zip
                  $(Build.ArtifactStagingDirectory)/*.tar.gz
              changeLogCompareToRelease: 'lastFullRelease'
              changeLogType: 'commitBased'

