trigger:
  batch: true
  branches:
    include:
      - master
  tags:
    include:
      - '*'

pr:
  branches:
    include:
      - master
  paths:
    exclude:
      - docs/src/main/asciidoc/*
      - docs/src/main/asciidoc/images/*
      - README.md
      - CONTRIBUTING.md
      - LICENSE.txt
      - dco.txt
      - .github/ISSUE_TEMPLATE/*.md

stages:
  - stage: test
    displayName: Test
    jobs:
      - job: unit_test
        displayName: Unit tests
        strategy:
          maxParallel: 2
          matrix:
            jdk8_linux:
              imageName: 'ubuntu-16.04'
              jdk_version: '1.8'
            jdk11_linux:
              imageName: 'ubuntu-16.04'
              jdk_version: '1.11'
        pool:
          vmImage: $(imageName)
        steps:
          - task: SonarCloudPrepare@1
            displayName: 'Prepare SonarCloud analysis'
            condition: and(eq(variables['jdk_version'], '1.8'), eq(variables['System.PullRequest.IsFork'], 'False'))
            inputs:
              SonarCloud: 'project-openubl/xml-builder'
              organization: 'project-openubl'
              scannerMode: 'CLI'
              configMode: 'file'
          - task: Maven@3
            displayName: Maven with SonarQube analysis
            condition: and(eq(variables['jdk_version'], '1.8'), eq(variables['System.PullRequest.IsFork'], 'False'))
            inputs:
              mavenPomFile: 'pom.xml'
              goals: verify
              jdkVersionOption: $(jdk_version)
              sonarQubeRunAnalysis: true
          - task: Maven@3
            displayName: Maven without SonarQube analysis
            condition: eq(variables['System.PullRequest.IsFork'], 'True')
            inputs:
              mavenPomFile: 'pom.xml'
              goals: verify
              jdkVersionOption: $(jdk_version)
              sonarQubeRunAnalysis: false
      - job: test_sunat
        displayName: Tests SUNAT
        pool:
          vmImage: 'ubuntu-16.04'
        steps:
          - task: Maven@3
            inputs:
              mavenPomFile: 'pom.xml'
              goals: 'install'
              options: '-Psunat'
              javaHomeOption: 'JDKVersion'
              mavenVersionOption: 'Default'
  - stage: native_test
    displayName: Native tests
    jobs:
      - job: release_snapshot_to_dockerhub
        displayName: Build native image and push it to DockerHub
        pool:
          vmImage: 'ubuntu-16.04'
        steps:
          - task: Docker@2
            condition: eq(variables['System.PullRequest.IsFork'], 'True')
            inputs:
              containerRegistry: 'Docker Hub'
              repository: 'projectopenubl/xml-builder'
              command: 'build'
              Dockerfile: '**/Dockerfile.multistage'
          - task: Docker@2
            condition: eq(variables['System.PullRequest.IsFork'], 'False')
            inputs:
              containerRegistry: 'Docker Hub'
              repository: 'projectopenubl/xml-builder'
              command: 'buildAndPush'
              Dockerfile: '**/Dockerfile.multistage'
  - stage: release
    displayName: Release
    jobs:
      - job: release_to_dockerhub
        displayName: Release to Docker Hub
        condition: startsWith(variables['Build.SourceBranch'], 'refs/tags/')
        pool:
          vmImage: 'ubuntu-16.04'
        steps:
          - task: Docker@2
            inputs:
              containerRegistry: 'Docker Hub'
              repository: 'projectopenubl/xml-builder'
              command: 'buildAndPush'
              Dockerfile: '**/Dockerfile.multistage'
              tags: |
                $(Build.SourceBranchName)
                latest
      - job: release_to_github
        displayName: Release to Github
        condition: startsWith(variables['Build.SourceBranch'], 'refs/tags/')
        steps:
          - task: Maven@3
            inputs:
              mavenPomFile: 'pom.xml'
              goals: 'package'
              options: -DskipTests
              javaHomeOption: 'JDKVersion'
              jdkVersionOption: '1.8'
              mavenVersionOption: 'Default'
          - task: CopyFiles@2
            inputs:
              SourceFolder: 'services/target'
              Contents: '*-runner.jar'
              TargetFolder: '$(Build.BinariesDirectory)'
          - task: CopyFiles@2
            inputs:
              SourceFolder: 'services/target'
              Contents: 'lib/**'
              TargetFolder: '$(Build.BinariesDirectory)'
          - task: ArchiveFiles@2
            inputs:
              rootFolderOrFile: '$(Build.BinariesDirectory)'
              includeRootFolder: false
              archiveType: 'zip'
              archiveFile: '$(Build.ArtifactStagingDirectory)/xml-builder-$(Build.SourceBranchName).zip'
              replaceExistingArchive: true
          - task: ArchiveFiles@2
            inputs:
              rootFolderOrFile: '$(Build.BinariesDirectory)'
              includeRootFolder: false
              archiveType: 'tar'
              archiveFile: '$(Build.ArtifactStagingDirectory)/xml-builder-$(Build.SourceBranchName).tar.gz'
              replaceExistingArchive: true
          - task: GitHubRelease@1
            displayName: Create Github Release
            inputs:
              gitHubConnection: project-openubl
              repositoryName: '$(Build.Repository.Name)'
              action: 'create'
              target: '$(Build.SourceVersion)'
              tagSource: 'gitTag'
              assets: |
                  $(Build.ArtifactStagingDirectory)/*.zip
                  $(Build.ArtifactStagingDirectory)/*.tar.gz
              changeLogCompareToRelease: 'lastFullRelease'
              changeLogType: 'commitBased'
        

  