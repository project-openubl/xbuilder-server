name: XML Builder Release

on:
  push:
    tags:
      - 'v*'

env:
  NATIVE_TEST_MAVEN_OPTS: "-e -B -Dquarkus.native.container-build=true -Dquarkus.native.builder-image=quay.io/quarkus/ubi-quarkus-native-image:19.3.1-java11 -Dnative-image.xmx=5g -Dnative -Dno-format"

jobs:
  build-jdk11:
    name: "JDK 11 Build"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: n1hility/cancel-previous-runs@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up JDK 11
        # Uses sha for added security since tags can be updated
        uses: joschi/setup-jdk@b9cc6eabf7e7e3889766b5cee486f874c9e1bd2d
        with:
          java-version: 11
      - name: Compute cache restore key
        # Always recompute on a push so that the maven repo doesnt grow indefinitely with old versions
        run: |
           if ${{ github.event_name == 'pull_request' }}; then echo "::set-env name=COMPUTED_RESTORE_KEY::q2maven-"; fi
      - name: Cache Maven Repository
        id: cache-maven
        uses: n1hility/cache@v2
        with:
          path: ~/.m2/repository
          # Improves the reusability of the cache to limit key changes
          key: q2maven-${{ hashFiles('pom.xml') }}
          restore-keys: ${{ env.COMPUTED_RESTORE_KEY }}
          restore-only: ${{ github.event_name == 'pull_request' }}
      - name: Build
        run: |
          mvn -e -B  -DskipTests=true -DskipDocs clean install
      - name: Tar Maven Repo
        shell: bash
        run: tar -czvf maven-repo.tgz -C ~ .m2/repository
      - name: Persist Maven Repo
        uses: actions/upload-artifact@v1
        with:
          name: maven-repo
          path: maven-repo.tgz


  java-artifacts:
    name: Java Artifacts
    needs: build-jdk11
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        # Uses sha for added security since tags can be updated
        uses: joschi/setup-jdk@b9cc6eabf7e7e3889766b5cee486f874c9e1bd2d
        with:
          java-version: 11
      - name: Download Maven Repo
        uses: actions/download-artifact@v1
        with:
          name: maven-repo
          path: .
      - name: Extract Maven Repo
        shell: bash
        run: tar -xzvf maven-repo.tgz -C ~
      - name: Build with Maven
        run: |
          eval mvn -DskipTests -P ui package
      - name: Prepare XML Builder archive
        shell: bash
        run: |
          find api/target -name 'lib' -o -name 'xml-builder-*-runner.jar' | tar -czvf xml-builder-java-artifacts.tgz -T -
      - name: Upload Archive XML Builder
        uses: actions/upload-artifact@v1
        with:
          name: xml-builder-java-artifacts
          path: 'xml-builder-java-artifacts.tgz'
      - name: Prepare XML Builder Signer archive
        shell: bash
        run: |
          find api-signer/target -name 'lib' -o -name 'xml-builder-*-runner.jar' | tar -czvf xml-builder-signer-java-artifacts.tgz -T -
      - name: Upload Archive XML Builder Signer
        uses: actions/upload-artifact@v1
        with:
          name: xml-builder-signer-java-artifacts
          path: 'xml-builder-signer-java-artifacts.tgz'


  native-linux-artifacts:
    name: Native Linux Artifacts
    needs: build-jdk11
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        # Uses sha for added security since tags can be updated
        uses: joschi/setup-jdk@b9cc6eabf7e7e3889766b5cee486f874c9e1bd2d
        with:
          java-version: 11
      - name: Download Maven Repo
        uses: actions/download-artifact@v1
        with:
          name: maven-repo
          path: .
      - name: Extract Maven Repo
        shell: bash
        run: tar -xzvf maven-repo.tgz -C ~
      - name: Build with Maven
        run: |
          eval mvn $NATIVE_TEST_MAVEN_OPTS -Dquarkus.profile=postgresql -DskipTests -P ui package
      - name: Prepare archive
        shell: bash
        run: find . -name 'xml-builder-*-runner' -type f | tar -czvf native-linux-artifacts.tgz -T -
      - name: Upload Archive
        uses: actions/upload-artifact@v1
        with:
          name: native-linux-artifacts
          path: 'native-linux-artifacts.tgz'


  native-container-images:
    name: Release Native Container Images
    needs: native-linux-artifacts
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Download Native Artifacts
        uses: actions/download-artifact@v1
        with:
          name: native-linux-artifacts
          path: .
      - name: Extract Native Artifacs
        shell: bash
        run: tar -xzvf native-linux-artifacts.tgz
      - name: Publish to Registry XML Builder (Release)
        # Uses sha for added security since tags can be updated
        uses: elgohr/Publish-Docker-Github-Action@b2f63259b466ca5a4be395c392546de447450334
        with:
          name: projectopenubl/xml-builder
          dockerfile: api/src/main/docker/Dockerfile.native
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          tag_names: true
      - name: Publish to Registry XML Builder Signer (Release)
        # Uses sha for added security since tags can be updated
        uses: elgohr/Publish-Docker-Github-Action@b2f63259b466ca5a4be395c392546de447450334
        with:
          name: projectopenubl/xml-builder-signer
          dockerfile: api-signer/src/main/docker/Dockerfile.native
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          tag_names: true


release:
  name: Create Release
  runs-on: ubuntu-latest
  needs: [java-artifacts, native-container-images]
  steps:
    - uses: actions/checkout@v2
    - name: Download Java XML Builder Artifacts
      uses: actions/download-artifact@v1
      with:
        name: xml-builder-java-artifacts
        path: .
    - name: Download Java XML Builder Signer Artifacts
      uses: actions/download-artifact@v1
      with:
        name: xml-builder-signer-java-artifacts
        path: .
    - name: Download Native Artifacts
      uses: actions/download-artifact@v1
      with:
        name: native-linux-artifacts
        path: .
    - name: changelog
      # Uses sha for added security since tags can be updated
      uses: scottbrenner/generate-changelog-action@a16a10a57b39a556fc8a3e2547723c1e08c84821
      id: Changelog
      env:
        REPO: ${{ github.repository }}
    - name: Create Release
      id: create_release
      # Uses sha for added security since tags can be updated
      uses: actions/create-release@8f324cdc2e5470815db0a286b4b3aa7803c0e6ef
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          ${{ steps.Changelog.outputs.changelog }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./xml-builder-java-artifacts.tgz
        asset_name: xml-builder-jdk.tgz
        asset_content_type: application/tar+gzip
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./xml-builder-signer-java-artifacts.tgz
        asset_name: xml-builder-signer-jdk.tgz
        asset_content_type: application/tar+gzip
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./native-linux-artifacts.tgz
        asset_name: native-linux-artifacts.tgz
        asset_content_type: application/tar+gzip